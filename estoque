<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Controle de Estoque Diário - CSV</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      margin: 20px;
    }
    .container {
      max-width: 600px;
      margin: auto;
      background: #fff;
      padding: 20px;
      border-radius: 6px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h2 { color: #333; }
    label {
      font-weight: bold;
      display: block;
      margin-top: 10px;
    }
    select, input {
      width: 100%;
      padding: 10px;
      margin: 5px 0 15px 0;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    button {
      padding: 10px 20px;
      font-size: 18px;
      border: none;
      background: #007BFF;
      color: #fff;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover { background: #0056b3; }
  </style>
  <!-- Inclui a biblioteca PapaParse via CDN -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.2/papaparse.min.js"></script>
</head>
<body>
  <div class="container">
    <h2>Controle de Estoque Diário</h2>
    
    <label for="categoria">Categoria:</label>
    <select id="categoria" onchange="updateProducts()">
      <option value="">Carregando categorias...</option>
    </select>
    
    <label for="produto">Produto:</label>
    <select id="produto" onchange="updateEstoque()">
      <option value="">Selecione uma categoria primeiro</option>
    </select>
    
    <label for="estoque">Estoque:</label>
    <input type="number" id="estoque" placeholder="Digite o estoque">
    
    <button onclick="enviar()">Salvar</button>
  </div>
  
  <script>
    // URL do CSV publicado da sua planilha
    const csvUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vSrN2g-b9pNdnqZrJKWc6kI-EMEA5U-VAzIbk81mcXgzqUCZyehyEKFWzwZI9R35F_wt0AX3zTfK6DF/pub?output=csv";
    
    // Objeto para armazenar os produtos agrupados por categoria.
    // Cada categoria conterá um array de objetos: { descricao, estoque }
    let produtosPorCategoria = {};
    
    // Função para carregar e processar o CSV usando PapaParse
    function loadCSV() {
      Papa.parse(csvUrl, {
        download: true,
        header: true, // Usa a primeira linha como cabeçalho
        complete: function(results) {
          // Reinicia o objeto
          produtosPorCategoria = {};
          results.data.forEach(row => {
            // Extraia os dados usando os cabeçalhos da planilha.
            // Certifique-se de que sua planilha possua as colunas "Categoria", "Descrição" e "Estoque".
            const categoria = row["Categoria"] ? row["Categoria"].trim() : "";
            const descricao = row["Descrição"] ? row["Descrição"].trim() : "";
            const estoque = row["Estoque"] ? row["Estoque"].trim() : "";
            if (categoria && descricao) {
              if (!produtosPorCategoria[categoria]) {
                produtosPorCategoria[categoria] = [];
              }
              produtosPorCategoria[categoria].push({ descricao, estoque });
            }
          });
          populateCategories();
        },
        error: function(err) {
          console.error("Erro ao carregar CSV:", err);
          alert("Erro ao carregar os dados CSV. Verifique o console.");
        }
      });
    }
    
    // Preenche o select de categorias com os nomes das categorias extraídos do CSV
    function populateCategories() {
      const selectCategoria = document.getElementById("categoria");
      selectCategoria.innerHTML = "<option value=''>Selecione...</option>";
      Object.keys(produtosPorCategoria).sort().forEach(categoria => {
        const option = document.createElement("option");
        option.value = categoria;
        option.textContent = categoria;
        selectCategoria.appendChild(option);
      });
      updateProducts(); // Atualiza os produtos se já houver categoria selecionada
    }
    
    // Atualiza o select de produtos conforme a categoria selecionada
    function updateProducts() {
      const categoria = document.getElementById("categoria").value;
      const selectProduto = document.getElementById("produto");
      selectProduto.innerHTML = ""; // Limpa as opções existentes
      if (categoria && produtosPorCategoria[categoria]) {
        produtosPorCategoria[categoria].forEach(item => {
          const option = document.createElement("option");
          option.value = item.descricao;
          option.textContent = item.descricao;
          // Armazena o valor do estoque como atributo de dados para uso posterior
          option.dataset.estoque = item.estoque;
          selectProduto.appendChild(option);
        });
      } else {
        selectProduto.innerHTML = "<option value=''>Selecione uma categoria primeiro</option>";
      }
    }
    
    // Atualiza automaticamente o campo "Estoque" com o valor associado ao produto selecionado
    function updateEstoque() {
      const selectProduto = document.getElementById("produto");
      const estoqueInput = document.getElementById("estoque");
      const selectedOption = selectProduto.options[selectProduto.selectedIndex];
      if (selectedOption && selectedOption.dataset.estoque) {
        estoqueInput.value = selectedOption.dataset.estoque;
      } else {
        estoqueInput.value = "";
      }
    }
    
    // Função para enviar os dados para o seu Web App do Google Apps Script
    function enviar() {
      const categoria = document.getElementById("categoria").value;
      const produto = document.getElementById("produto").value;
      const estoque = document.getElementById("estoque").value;
      
      if (!categoria || !produto || !estoque) {
        alert("Por favor, preencha todos os campos.");
        return;
      }
      
      // Cria um objeto com os dados, incluindo a data atual
      const data = {
        data: new Date().toLocaleDateString("pt-BR"),
        categoria: categoria,
        produto: produto,
        estoque: estoque
      };
      
      // URL do seu Web App do Google Apps Script
      // Substitua "YOUR_WEB_APP_URL" pela URL real obtida no Apps Script
      const endpoint = "https://script.google.com/macros/s/AKfycbzq4OQC3gzcBXITizsU-owEU7yWDKBmhJhD9Aw-228nGcNpsRBPAJ8S-KzRBEJYJHnW/exec";
      
      fetch(endpoint, {
        method: "POST",
        mode: "cors",  // Certifique-se de que o Apps Script está configurado para permitir CORS
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(result => {
        if (result.result === "success") {
          alert("Dados salvos com sucesso no Google Sheets!");
        } else {
          alert("Erro ao salvar os dados: " + result.error);
        }
      })
      .catch(err => {
        console.error("Erro:", err);
        alert("Erro de conexão. Verifique o console.");
      });
    }
    
    // Carrega o CSV assim que a página for carregada
    window.onload = loadCSV;
  </script>
</body>
</html>
